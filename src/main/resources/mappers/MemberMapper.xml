<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.recipe.mappers.IMemberMapper">

    <insert id="insertEmailAuth"
            useGeneratedKeys="true"
            keyProperty="index"
            keyColumn="index"
            parameterType="dev.recipe.entities.EmailAuthEntity">
        INSERT INTO `recipe_member`.`email_auths`(`email`, `code`, `salt`, `created_on`, `expires_on`, `expires_flag`)
        VALUES (#{email}, #{code}, #{salt}, #{createdOn}, #{expiresOn}, #{expiresFlag})
    </insert>

    <insert id="insertUser"
            parameterType="dev.recipe.entities.UserEntity">
        INSERT INTO `recipe_member`.`users`(email, `password`, `image_name`, `image_data`, `image_type`, age, gender,
                                            nickname, `name`,
                                            contact, address_postal, address_primary, address_secondary)
        VALUES (#{email}, #{password}, #{imageName}, #{imageData}, #{imageType}, #{age}, #{gender}, #{nickname},
                #{name}, #{contact},
                #{addressPostal}, #{addressPrimary}, #{addressSecondary})
    </insert>

    <insert id="insertKakao"
            parameterType="dev.recipe.entities.kakao.KakaoEntity">
        INSERT INTO `recipe_member`.`kakao_users`(id, email, nickname, profile_image, thumbnail_image, age_range,
                                                  gender, registered_on)
        VALUES (#{id}, #{email}, #{nickname}, #{profileImage}, #{thumbnailImage}, #{ageRange}, #{gender},
                IFNULL(#{registeredOn}, DEFAULT(`registered_on`)))
    </insert>

    <insert id="insertNaver"
            parameterType="dev.recipe.entities.naver.NaverEntity">
        INSERT INTO `recipe_member`.`naver_users`(id, email, nickname, profile_image, age, gender, registered_on)
        VALUES (#{id}, #{email}, #{nickname}, #{profileImage}, #{age}, #{gender},
                IFNULL(#{registeredOn}, DEFAULT(`registered_on`)))
    </insert>

    <insert id="insertGoogle"
            parameterType="dev.recipe.entities.google.GoogleEntity">
        INSERT INTO `recipe_member`.`google_users`(id, email, nickname, profile_image, age, gender, registered_on)
        VALUES (#{id}, #{email}, #{nickname}, #{profileImage}, #{age}, #{gender},
                IFNULL(#{registeredOn}, DEFAULT(`registered_on`)))
    </insert>

    <select id="selectUserByNaverId"
            resultType="dev.recipe.entities.naver.NaverEntity">
        SELECT `id`            AS `id`,
               `email`         AS `email`,
               `nickname`      AS `nickname`,
               `profile_image` AS `progileImage`,
               `age`           AS `age`,
               `gender`        AS `gender`,
               `registered_on` AS `registeredOn`
        FROM `recipe_member`.`naver_users`
        WHERE `id` = #{id}
        LIMIT 1
    </select>

    <select id="selectUserByGoogleId"
            resultType="dev.recipe.entities.google.GoogleEntity">
        SELECT `id`            AS `id`,
               `email`         AS `email`,
               `nickname`      AS `nickname`,
               `profile_image` AS `progileImage`,
               `age`           AS `age`,
               `gender`        AS `gender`,
               `registered_on` AS `registeredOn`
        FROM `recipe_member`.`google_users`
        WHERE `id` = #{id}
        LIMIT 1
    </select>

    <select id="selectUserById"
            resultType="dev.recipe.entities.kakao.KakaoEntity">
        SELECT `id`              AS `id`,
               `email`           AS `email`,
               `nickname`        AS `nickname`,
               `profile_image`   AS `profileImage`,
               `thumbnail_image` AS `thumbnailImage`,
               `age_range`       AS `ageRange`,
               `gender`          AS `gender`,
               `registered_on`   AS `registeredOn`
        FROM `recipe_member`.`kakao_users`
        WHERE `id` = #{id}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByIndex"
            resultType="dev.recipe.entities.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expires_flag` AS `expiresFlag`
        FROM `recipe_member`.`email_auths`
        WHERE BINARY `index` = #{index}
    </select>

    <select id="selectEmailAuthByEmailCodeSalt"
            resultType="dev.recipe.entities.EmailAuthEntity">
        SELECT `index`        AS `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expires_flag` AS `expiresFlag`
        FROM `recipe_member`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <select id="selectUserByEmail"
            resultType="dev.recipe.entities.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `image_name`        AS `imageName`,
               `image_data`        AS `imageData`,
               `image_type`        AS `imageType`,
               `age`               AS `age`,
               `gender`            AS `gender`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `recipe_member`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserByEmailPassword"
            resultType="dev.recipe.entities.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `image_name`        AS `imageName`,
               `image_data`        AS `imageData`,
               `image_type`        AS `imageType`,
               `age`               AS `age`,
               `gender`            AS `gender`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `recipe_member`.`users`
        WHERE BINARY `email` = #{email}
          AND BINARY `password` = #{password}
        LIMIT 1
    </select>

    <select id="selectUserByAgeNameContact"
            resultType="dev.recipe.entities.UserEntity">
        SELECT `email`             AS `email`,
               `password`          AS `password`,
               `image_name`        AS `imageName`,
               `image_data`        AS `imageData`,
               `image_type`        AS `imageType`,
               `age`               AS `age`,
               `gender`            AS `gender`,
               `nickname`          AS `nickname`,
               `name`              AS `name`,
               `contact`           AS `contact`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`
        FROM `recipe_member`.`users`
        WHERE BINARY `name` = #{name}
          AND BINARY `contact` = #{contact}
        LIMIT 1
    </select>

    <update id="updateEmailAuth"
            parameterType="dev.recipe.entities.EmailAuthEntity">
        UPDATE `recipe_member`.`email_auths`
        SET `email`        = #{email},
            `code`         = #{code},
            `salt`         = #{salt},
            `created_on`   = #{createdOn},
            `expires_on`   = #{expiresOn},
            `expires_flag` = #{expiresFlag}
        WHERE BINARY `index` = #{index}
        LIMIT 1
    </update>

    <update id="updateUser"
            parameterType="dev.recipe.entities.UserEntity">
        UPDATE `recipe_member`.`users`
        SET `password`          = #{password},
            `image_name`        = #{imageName},
            `image_data`        = #{imageData},
            `image_type`        = #{imageType},
            `age`               = #{age},
            `gender`            = #{gender},
            `nickname`          = #{nickname},
            `name`              = #{name},
            `contact`           = #{contact},
            `address_postal`    = #{addressPostal},
            `address_primary`   = #{addressPrimary},
            `address_secondary` = #{addressSecondary}
        WHERE `email` = #{email}
        LIMIT 1
    </update>
</mapper>